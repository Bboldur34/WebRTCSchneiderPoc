@page "/counter"
@inject IJSRuntime JsRuntime
@implements IDisposable

<h1>Counter</h1>

<p>Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {        

    private IWindow _window;
    private INavigator _navigator;
    private IMediaDevices _mediaDevices;
    private IMediaStream _mediaStream;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            var webRtc = CrossWebRtc.Current;
            _window = await webRtc.Window(JsRuntime);
            _navigator = await _window.Navigator();
            _mediaDevices = await _navigator.MediaDevices();
            _mediaStream = await _mediaDevices.GetUserMedia(new MediaStreamConstraints
            {
                Audio = true,
                Video = true
            });





            //            StateHasChanged();
        }
    }

    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }

    public void Dispose()
    {
        // It seems Blazor has no support for IDisposeAsync!!!
        // So we do fire and forget here!!!
        Task.Run(async () => await _mediaDevices.DisposeAsync());
        Task.Run(async () => await _navigator.DisposeAsync());
        Task.Run(async () => await _window.DisposeAsync());
    }

}
