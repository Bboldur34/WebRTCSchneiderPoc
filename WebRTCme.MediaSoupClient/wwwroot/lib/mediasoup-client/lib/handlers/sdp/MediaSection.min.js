/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/mediasoup-client@3.6.34/lib/handlers/sdp/MediaSection.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,i,s){void 0===s&&(s=i),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[i]}})}:function(e,t,i,s){void 0===s&&(s=i),e[s]=t[i]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.hasOwnProperty.call(e,i)&&__createBinding(t,e,i);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.OfferMediaSection=exports.AnswerMediaSection=exports.MediaSection=void 0;const utils=__importStar(require("../../utils"));class MediaSection{constructor({iceParameters:e,iceCandidates:t,dtlsParameters:i,planB:s=!1}){if(this._mediaObject={},this._planB=s,e&&this.setIceParameters(e),t){this._mediaObject.candidates=[];for(const e of t){const t={component:1};t.foundation=e.foundation,t.ip=e.ip,t.port=e.port,t.priority=e.priority,t.transport=e.protocol,t.type=e.type,e.tcpType&&(t.tcptype=e.tcpType),this._mediaObject.candidates.push(t)}this._mediaObject.endOfCandidates="end-of-candidates",this._mediaObject.iceOptions="renomination"}i&&this.setDtlsRole(i.role)}get mid(){return String(this._mediaObject.mid)}get closed(){return 0===this._mediaObject.port}getObject(){return this._mediaObject}setIceParameters(e){this._mediaObject.iceUfrag=e.usernameFragment,this._mediaObject.icePwd=e.password}disable(){this._mediaObject.direction="inactive",delete this._mediaObject.ext,delete this._mediaObject.ssrcs,delete this._mediaObject.ssrcGroups,delete this._mediaObject.simulcast,delete this._mediaObject.simulcast_03,delete this._mediaObject.rids}close(){this._mediaObject.direction="inactive",this._mediaObject.port=0,delete this._mediaObject.ext,delete this._mediaObject.ssrcs,delete this._mediaObject.ssrcGroups,delete this._mediaObject.simulcast,delete this._mediaObject.simulcast_03,delete this._mediaObject.rids,delete this._mediaObject.extmapAllowMixed}}exports.MediaSection=MediaSection;class AnswerMediaSection extends MediaSection{constructor({iceParameters:e,iceCandidates:t,dtlsParameters:i,sctpParameters:s,plainRtpParameters:a,planB:c=!1,offerMediaObject:r,offerRtpParameters:d,answerRtpParameters:o,codecOptions:p,extmapAllowMixed:n=!1}){switch(super({iceParameters:e,iceCandidates:t,dtlsParameters:i,planB:c}),this._mediaObject.mid=String(r.mid),this._mediaObject.type=r.type,this._mediaObject.protocol=r.protocol,a?(this._mediaObject.connection={ip:a.ip,version:a.ipVersion},this._mediaObject.port=a.port):(this._mediaObject.connection={ip:"127.0.0.1",version:4},this._mediaObject.port=7),r.type){case"audio":case"video":this._mediaObject.direction="recvonly",this._mediaObject.rtp=[],this._mediaObject.rtcpFb=[],this._mediaObject.fmtp=[];for(const e of o.codecs){const t={payload:e.payloadType,codec:getCodecName(e),rate:e.clockRate};e.channels>1&&(t.encoding=e.channels),this._mediaObject.rtp.push(t);const i=utils.clone(e.parameters,{});if(p){const{opusStereo:t,opusFec:s,opusDtx:a,opusMaxPlaybackRate:c,opusMaxAverageBitrate:r,opusPtime:o,videoGoogleStartBitrate:n,videoGoogleMaxBitrate:m,videoGoogleMinBitrate:l}=p,h=d.codecs.find((t=>t.payloadType===e.payloadType));switch(e.mimeType.toLowerCase()){case"audio/opus":void 0!==t&&(h.parameters["sprop-stereo"]=t?1:0,i.stereo=t?1:0),void 0!==s&&(h.parameters.useinbandfec=s?1:0,i.useinbandfec=s?1:0),void 0!==a&&(h.parameters.usedtx=a?1:0,i.usedtx=a?1:0),void 0!==c&&(i.maxplaybackrate=c),void 0!==r&&(i.maxaveragebitrate=r),void 0!==o&&(h.parameters.ptime=o,i.ptime=o);break;case"video/vp8":case"video/vp9":case"video/h264":case"video/h265":void 0!==n&&(i["x-google-start-bitrate"]=n),void 0!==m&&(i["x-google-max-bitrate"]=m),void 0!==l&&(i["x-google-min-bitrate"]=l)}}const s={payload:e.payloadType,config:""};for(const e of Object.keys(i))s.config&&(s.config+=";"),s.config+=`${e}=${i[e]}`;s.config&&this._mediaObject.fmtp.push(s);for(const t of e.rtcpFeedback)this._mediaObject.rtcpFb.push({payload:e.payloadType,type:t.type,subtype:t.parameter})}this._mediaObject.payloads=o.codecs.map((e=>e.payloadType)).join(" "),this._mediaObject.ext=[];for(const e of o.headerExtensions){(r.ext||[]).some((t=>t.uri===e.uri))&&this._mediaObject.ext.push({uri:e.uri,value:e.id})}if(n&&"extmap-allow-mixed"===r.extmapAllowMixed&&(this._mediaObject.extmapAllowMixed="extmap-allow-mixed"),r.simulcast){this._mediaObject.simulcast={dir1:"recv",list1:r.simulcast.list1},this._mediaObject.rids=[];for(const e of r.rids||[])"send"===e.direction&&this._mediaObject.rids.push({id:e.id,direction:"recv"})}else if(r.simulcast_03){this._mediaObject.simulcast_03={value:r.simulcast_03.value.replace(/send/g,"recv")},this._mediaObject.rids=[];for(const e of r.rids||[])"send"===e.direction&&this._mediaObject.rids.push({id:e.id,direction:"recv"})}this._mediaObject.rtcpMux="rtcp-mux",this._mediaObject.rtcpRsize="rtcp-rsize",this._planB&&"video"===this._mediaObject.type&&(this._mediaObject.xGoogleFlag="conference");break;case"application":"number"==typeof r.sctpPort?(this._mediaObject.payloads="webrtc-datachannel",this._mediaObject.sctpPort=s.port,this._mediaObject.maxMessageSize=s.maxMessageSize):r.sctpmap&&(this._mediaObject.payloads=s.port,this._mediaObject.sctpmap={app:"webrtc-datachannel",sctpmapNumber:s.port,maxMessageSize:s.maxMessageSize})}}setDtlsRole(e){switch(e){case"client":this._mediaObject.setup="active";break;case"server":this._mediaObject.setup="passive";break;case"auto":this._mediaObject.setup="actpass"}}}exports.AnswerMediaSection=AnswerMediaSection;class OfferMediaSection extends MediaSection{constructor({iceParameters:e,iceCandidates:t,dtlsParameters:i,sctpParameters:s,plainRtpParameters:a,planB:c=!1,mid:r,kind:d,offerRtpParameters:o,streamId:p,trackId:n,oldDataChannelSpec:m=!1}){switch(super({iceParameters:e,iceCandidates:t,dtlsParameters:i,planB:c}),this._mediaObject.mid=String(r),this._mediaObject.type=d,a?(this._mediaObject.connection={ip:a.ip,version:a.ipVersion},this._mediaObject.protocol="RTP/AVP",this._mediaObject.port=a.port):(this._mediaObject.connection={ip:"127.0.0.1",version:4},this._mediaObject.protocol=s?"UDP/DTLS/SCTP":"UDP/TLS/RTP/SAVPF",this._mediaObject.port=7),d){case"audio":case"video":{this._mediaObject.direction="sendonly",this._mediaObject.rtp=[],this._mediaObject.rtcpFb=[],this._mediaObject.fmtp=[],this._planB||(this._mediaObject.msid=`${p||"-"} ${n}`);for(const e of o.codecs){const t={payload:e.payloadType,codec:getCodecName(e),rate:e.clockRate};e.channels>1&&(t.encoding=e.channels),this._mediaObject.rtp.push(t);const i={payload:e.payloadType,config:""};for(const t of Object.keys(e.parameters))i.config&&(i.config+=";"),i.config+=`${t}=${e.parameters[t]}`;i.config&&this._mediaObject.fmtp.push(i);for(const t of e.rtcpFeedback)this._mediaObject.rtcpFb.push({payload:e.payloadType,type:t.type,subtype:t.parameter})}this._mediaObject.payloads=o.codecs.map((e=>e.payloadType)).join(" "),this._mediaObject.ext=[];for(const e of o.headerExtensions)this._mediaObject.ext.push({uri:e.uri,value:e.id});this._mediaObject.rtcpMux="rtcp-mux",this._mediaObject.rtcpRsize="rtcp-rsize";const e=o.encodings[0],t=e.ssrc,i=e.rtx&&e.rtx.ssrc?e.rtx.ssrc:void 0;this._mediaObject.ssrcs=[],this._mediaObject.ssrcGroups=[],o.rtcp.cname&&this._mediaObject.ssrcs.push({id:t,attribute:"cname",value:o.rtcp.cname}),this._planB&&this._mediaObject.ssrcs.push({id:t,attribute:"msid",value:`${p||"-"} ${n}`}),i&&(o.rtcp.cname&&this._mediaObject.ssrcs.push({id:i,attribute:"cname",value:o.rtcp.cname}),this._planB&&this._mediaObject.ssrcs.push({id:i,attribute:"msid",value:`${p||"-"} ${n}`}),this._mediaObject.ssrcGroups.push({semantics:"FID",ssrcs:`${t} ${i}`}));break}case"application":m?(this._mediaObject.payloads=s.port,this._mediaObject.sctpmap={app:"webrtc-datachannel",sctpmapNumber:s.port,maxMessageSize:s.maxMessageSize}):(this._mediaObject.payloads="webrtc-datachannel",this._mediaObject.sctpPort=s.port,this._mediaObject.maxMessageSize=s.maxMessageSize)}}setDtlsRole(e){this._mediaObject.setup="actpass"}planBReceive({offerRtpParameters:e,streamId:t,trackId:i}){const s=e.encodings[0],a=s.ssrc,c=s.rtx&&s.rtx.ssrc?s.rtx.ssrc:void 0;for(const t of e.codecs){const e={payload:t.payloadType,codec:getCodecName(t),rate:t.clockRate};t.channels>1&&(e.encoding=t.channels),this._mediaObject.rtp.push(e);const i={payload:t.payloadType,config:""};for(const e of Object.keys(t.parameters))i.config&&(i.config+=";"),i.config+=`${e}=${t.parameters[e]}`;i.config&&this._mediaObject.fmtp.push(i);for(const e of t.rtcpFeedback)this._mediaObject.rtcpFb.push({payload:t.payloadType,type:e.type,subtype:e.parameter})}this._mediaObject.payloads+=" "+e.codecs.map((e=>e.payloadType)).join(" "),e.rtcp.cname&&this._mediaObject.ssrcs.push({id:a,attribute:"cname",value:e.rtcp.cname}),this._mediaObject.ssrcs.push({id:a,attribute:"msid",value:`${t||"-"} ${i}`}),c&&(e.rtcp.cname&&this._mediaObject.ssrcs.push({id:c,attribute:"cname",value:e.rtcp.cname}),this._mediaObject.ssrcs.push({id:c,attribute:"msid",value:`${t||"-"} ${i}`}),this._mediaObject.ssrcGroups.push({semantics:"FID",ssrcs:`${a} ${c}`}))}planBStopReceiving({offerRtpParameters:e}){const t=e.encodings[0],i=t.ssrc,s=t.rtx&&t.rtx.ssrc?t.rtx.ssrc:void 0,a=e.codecs.map((e=>e.payloadType));this._mediaObject.payloads=this._mediaObject.payloads.split(" ").filter((e=>!a.includes(Number(e)))).join(" "),this._mediaObject.rtp=this._mediaObject.rtp.filter((e=>!a.includes(e.payload))),this._mediaObject.rtcpFb=this._mediaObject.rtcpFb.filter((e=>!a.includes(e.payload))),this._mediaObject.fmtp=this._mediaObject.fmtp.filter((e=>!a.includes(e.payload))),this._mediaObject.ssrcs=this._mediaObject.ssrcs.filter((e=>e.id!==i&&e.id!==s)),s&&(this._mediaObject.ssrcGroups=this._mediaObject.ssrcGroups.filter((e=>e.ssrcs!==`${i} ${s}`)))}}function getCodecName(e){const t=new RegExp("^(audio|video)/(.+)","i").exec(e.mimeType);if(!t)throw new TypeError("invalid codec.mimeType");return t[2]}exports.OfferMediaSection=OfferMediaSection;
//# sourceMappingURL=/sm/3f2f2efb3d84d7abf44f2550783b0491364d16b7d3fb20aa6671490529ef0b9a.map