/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/mediasoup-client@3.6.34/lib/Transport.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,a){void 0===a&&(a=r),Object.defineProperty(e,a,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,a){void 0===a&&(a=r),e[a]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&__createBinding(t,e,r);return __setModuleDefault(t,e),t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Transport=void 0;const awaitqueue_1=require("awaitqueue"),Logger_1=require("./Logger"),EnhancedEventEmitter_1=require("./EnhancedEventEmitter"),errors_1=require("./errors"),utils=__importStar(require("./utils")),ortc=__importStar(require("./ortc")),Producer_1=require("./Producer"),Consumer_1=require("./Consumer"),DataProducer_1=require("./DataProducer"),DataConsumer_1=require("./DataConsumer"),logger=new Logger_1.Logger("Transport");class Transport extends EnhancedEventEmitter_1.EnhancedEventEmitter{constructor({direction:e,id:t,iceParameters:r,iceCandidates:a,dtlsParameters:o,sctpParameters:s,iceServers:n,iceTransportPolicy:i,additionalSettings:c,proprietaryConstraints:d,appData:p,handlerFactory:u,extendedRtpCapabilities:l,canProduceByKind:h}){super(),this._closed=!1,this._connectionState="new",this._producers=new Map,this._consumers=new Map,this._dataProducers=new Map,this._dataConsumers=new Map,this._probatorConsumerCreated=!1,this._awaitQueue=new awaitqueue_1.AwaitQueue({ClosedErrorClass:errors_1.InvalidStateError}),this._observer=new EnhancedEventEmitter_1.EnhancedEventEmitter,logger.debug("constructor() [id:%s, direction:%s]",t,e),this._id=t,this._direction=e,this._extendedRtpCapabilities=l,this._canProduceByKind=h,this._maxSctpMessageSize=s?s.maxMessageSize:null,delete(c=utils.clone(c,{})).iceServers,delete c.iceTransportPolicy,delete c.bundlePolicy,delete c.rtcpMuxPolicy,delete c.sdpSemantics,this._handler=u(),this._handler.run({direction:e,iceParameters:r,iceCandidates:a,dtlsParameters:o,sctpParameters:s,iceServers:n,iceTransportPolicy:i,additionalSettings:c,proprietaryConstraints:d,extendedRtpCapabilities:l}),this._appData=p,this._handleHandler()}get id(){return this._id}get closed(){return this._closed}get direction(){return this._direction}get handler(){return this._handler}get connectionState(){return this._connectionState}get appData(){return this._appData}set appData(e){throw new Error("cannot override appData object")}get observer(){return this._observer}close(){if(!this._closed){logger.debug("close()"),this._closed=!0,this._awaitQueue.close(),this._handler.close();for(const e of this._producers.values())e.transportClosed();this._producers.clear();for(const e of this._consumers.values())e.transportClosed();this._consumers.clear();for(const e of this._dataProducers.values())e.transportClosed();this._dataProducers.clear();for(const e of this._dataConsumers.values())e.transportClosed();this._dataConsumers.clear(),this._observer.safeEmit("close")}}async getStats(){if(this._closed)throw new errors_1.InvalidStateError("closed");return this._handler.getTransportStats()}async restartIce({iceParameters:e}){if(logger.debug("restartIce()"),this._closed)throw new errors_1.InvalidStateError("closed");if(!e)throw new TypeError("missing iceParameters");return this._awaitQueue.push((async()=>this._handler.restartIce(e)),"transport.restartIce()")}async updateIceServers({iceServers:e}={}){if(logger.debug("updateIceServers()"),this._closed)throw new errors_1.InvalidStateError("closed");if(!Array.isArray(e))throw new TypeError("missing iceServers");return this._awaitQueue.push((async()=>this._handler.updateIceServers(e)),"transport.updateIceServers()")}async produce({track:e,encodings:t,codecOptions:r,codec:a,stopTracks:o=!0,disableTrackOnPause:s=!0,zeroRtpOnPause:n=!1,appData:i={}}={}){if(logger.debug("produce() [track:%o]",e),!e)throw new TypeError("missing track");if("send"!==this._direction)throw new errors_1.UnsupportedError("not a sending Transport");if(!this._canProduceByKind[e.kind])throw new errors_1.UnsupportedError("cannot produce "+e.kind);if("ended"===e.readyState)throw new errors_1.InvalidStateError("track ended");if(0===this.listenerCount("connect")&&"new"===this._connectionState)throw new TypeError('no "connect" listener set into this transport');if(0===this.listenerCount("produce"))throw new TypeError('no "produce" listener set into this transport');if(i&&"object"!=typeof i)throw new TypeError("if given, appData must be an object");return this._awaitQueue.push((async()=>{let c;if(t&&!Array.isArray(t))throw TypeError("encodings must be an array");t&&0===t.length?c=void 0:t&&(c=t.map((e=>{const t={active:!0};return!1===e.active&&(t.active=!1),"boolean"==typeof e.dtx&&(t.dtx=e.dtx),"string"==typeof e.scalabilityMode&&(t.scalabilityMode=e.scalabilityMode),"number"==typeof e.scaleResolutionDownBy&&(t.scaleResolutionDownBy=e.scaleResolutionDownBy),"number"==typeof e.maxBitrate&&(t.maxBitrate=e.maxBitrate),"number"==typeof e.maxFramerate&&(t.maxFramerate=e.maxFramerate),"boolean"==typeof e.adaptivePtime&&(t.adaptivePtime=e.adaptivePtime),"string"==typeof e.priority&&(t.priority=e.priority),"string"==typeof e.networkPriority&&(t.networkPriority=e.networkPriority),t})));const{localId:d,rtpParameters:p,rtpSender:u}=await this._handler.send({track:e,encodings:c,codecOptions:r,codec:a});try{ortc.validateRtpParameters(p);const{id:t}=await this.safeEmitAsPromise("produce",{kind:e.kind,rtpParameters:p,appData:i}),r=new Producer_1.Producer({id:t,localId:d,rtpSender:u,track:e,rtpParameters:p,stopTracks:o,disableTrackOnPause:s,zeroRtpOnPause:n,appData:i});return this._producers.set(r.id,r),this._handleProducer(r),this._observer.safeEmit("newproducer",r),r}catch(e){throw this._handler.stopSending(d).catch((()=>{})),e}}),"transport.produce()").catch((t=>{if(o)try{e.stop()}catch(e){}throw t}))}async consume({id:e,producerId:t,kind:r,rtpParameters:a,appData:o={}}){if(logger.debug("consume()"),a=utils.clone(a,void 0),this._closed)throw new errors_1.InvalidStateError("closed");if("recv"!==this._direction)throw new errors_1.UnsupportedError("not a receiving Transport");if("string"!=typeof e)throw new TypeError("missing id");if("string"!=typeof t)throw new TypeError("missing producerId");if("audio"!==r&&"video"!==r)throw new TypeError(`invalid kind '${r}'`);if(0===this.listenerCount("connect")&&"new"===this._connectionState)throw new TypeError('no "connect" listener set into this transport');if(o&&"object"!=typeof o)throw new TypeError("if given, appData must be an object");return this._awaitQueue.push((async()=>{if(!ortc.canReceive(a,this._extendedRtpCapabilities))throw new errors_1.UnsupportedError("cannot consume this Producer");const{localId:s,rtpReceiver:n,track:i}=await this._handler.receive({trackId:e,kind:r,rtpParameters:a}),c=new Consumer_1.Consumer({id:e,localId:s,producerId:t,rtpReceiver:n,track:i,rtpParameters:a,appData:o});if(this._consumers.set(c.id,c),this._handleConsumer(c),!this._probatorConsumerCreated&&"video"===r)try{const e=ortc.generateProbatorRtpParameters(c.rtpParameters);await this._handler.receive({trackId:"probator",kind:"video",rtpParameters:e}),logger.debug("consume() | Consumer for RTP probation created"),this._probatorConsumerCreated=!0}catch(e){logger.error("consume() | failed to create Consumer for RTP probation:%o",e)}return this._observer.safeEmit("newconsumer",c),c}),"transport.consume()")}async produceData({ordered:e=!0,maxPacketLifeTime:t,maxRetransmits:r,label:a="",protocol:o="",appData:s={}}={}){if(logger.debug("produceData()"),"send"!==this._direction)throw new errors_1.UnsupportedError("not a sending Transport");if(!this._maxSctpMessageSize)throw new errors_1.UnsupportedError("SCTP not enabled by remote Transport");if(0===this.listenerCount("connect")&&"new"===this._connectionState)throw new TypeError('no "connect" listener set into this transport');if(0===this.listenerCount("producedata"))throw new TypeError('no "producedata" listener set into this transport');if(s&&"object"!=typeof s)throw new TypeError("if given, appData must be an object");return(t||r)&&(e=!1),this._awaitQueue.push((async()=>{const{dataChannel:n,sctpStreamParameters:i}=await this._handler.sendDataChannel({ordered:e,maxPacketLifeTime:t,maxRetransmits:r,label:a,protocol:o});ortc.validateSctpStreamParameters(i);const{id:c}=await this.safeEmitAsPromise("producedata",{sctpStreamParameters:i,label:a,protocol:o,appData:s}),d=new DataProducer_1.DataProducer({id:c,dataChannel:n,sctpStreamParameters:i,appData:s});return this._dataProducers.set(d.id,d),this._handleDataProducer(d),this._observer.safeEmit("newdataproducer",d),d}),"transport.produceData()")}async consumeData({id:e,dataProducerId:t,sctpStreamParameters:r,label:a="",protocol:o="",appData:s={}}){if(logger.debug("consumeData()"),r=utils.clone(r,void 0),this._closed)throw new errors_1.InvalidStateError("closed");if("recv"!==this._direction)throw new errors_1.UnsupportedError("not a receiving Transport");if(!this._maxSctpMessageSize)throw new errors_1.UnsupportedError("SCTP not enabled by remote Transport");if("string"!=typeof e)throw new TypeError("missing id");if("string"!=typeof t)throw new TypeError("missing dataProducerId");if(0===this.listenerCount("connect")&&"new"===this._connectionState)throw new TypeError('no "connect" listener set into this transport');if(s&&"object"!=typeof s)throw new TypeError("if given, appData must be an object");return ortc.validateSctpStreamParameters(r),this._awaitQueue.push((async()=>{const{dataChannel:n}=await this._handler.receiveDataChannel({sctpStreamParameters:r,label:a,protocol:o}),i=new DataConsumer_1.DataConsumer({id:e,dataProducerId:t,dataChannel:n,sctpStreamParameters:r,appData:s});return this._dataConsumers.set(i.id,i),this._handleDataConsumer(i),this._observer.safeEmit("newdataconsumer",i),i}),"transport.consumeData()")}_handleHandler(){const e=this._handler;e.on("@connect",(({dtlsParameters:e},t,r)=>{this._closed?r(new errors_1.InvalidStateError("closed")):this.safeEmit("connect",{dtlsParameters:e},t,r)})),e.on("@connectionstatechange",(e=>{e!==this._connectionState&&(logger.debug("connection state changed to %s",e),this._connectionState=e,this._closed||this.safeEmit("connectionstatechange",e))}))}_handleProducer(e){e.on("@close",(()=>{this._producers.delete(e.id),this._closed||this._awaitQueue.push((async()=>this._handler.stopSending(e.localId)),"producer @close event").catch((e=>logger.warn("producer.close() failed:%o",e)))})),e.on("@replacetrack",((t,r,a)=>{this._awaitQueue.push((async()=>this._handler.replaceTrack(e.localId,t)),"producer @replacetrack event").then(r).catch(a)})),e.on("@setmaxspatiallayer",((t,r,a)=>{this._awaitQueue.push((async()=>this._handler.setMaxSpatialLayer(e.localId,t)),"producer @setmaxspatiallayer event").then(r).catch(a)})),e.on("@setrtpencodingparameters",((t,r,a)=>{this._awaitQueue.push((async()=>this._handler.setRtpEncodingParameters(e.localId,t)),"producer @setrtpencodingparameters event").then(r).catch(a)})),e.on("@getstats",((t,r)=>{if(this._closed)return r(new errors_1.InvalidStateError("closed"));this._handler.getSenderStats(e.localId).then(t).catch(r)}))}_handleConsumer(e){e.on("@close",(()=>{this._consumers.delete(e.id),this._closed||this._awaitQueue.push((async()=>this._handler.stopReceiving(e.localId)),"consumer @close event").catch((()=>{}))})),e.on("@getstats",((t,r)=>{if(this._closed)return r(new errors_1.InvalidStateError("closed"));this._handler.getReceiverStats(e.localId).then(t).catch(r)}))}_handleDataProducer(e){e.on("@close",(()=>{this._dataProducers.delete(e.id)}))}_handleDataConsumer(e){e.on("@close",(()=>{this._dataConsumers.delete(e.id)}))}}exports.Transport=Transport;
//# sourceMappingURL=/sm/4cba727e9c25274fd12a1eac846bb9dc6bcef747c460d3eeea8b29cd2f623f3f.map